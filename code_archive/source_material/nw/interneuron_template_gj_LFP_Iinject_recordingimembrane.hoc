/////////////////////
// Model Templates //
/////////////////////

begintemplate InterneuronCell
	public soma, dend, connect2target, type,connect_gap,LFPtemp_xtra,drv,append_sections,all
	create soma, dend

	public conduclist, synlist
	objref conduclist, synlist,gaps[200],drv
	strdef type

	objref tlist, area_vec
   public tlist, area_vec
   external tstop


	proc init() {	
    append_sections()

	 tlist = new List()
    area_vec = new Vector()	
	
		synlist = new List()
        
		conduclist = new List()
		type = "InterneuronCell"

		/////// topology ////////
		//create soma, dend
		connect dend(0), soma(1)

		/////// geometry ////////
		soma {
			nseg=1
			L=15		// (micrometer)
			diam=15		// (micrometer)
	    	}

		dend {
			nseg=1
			L=150		// (micrometer)
			diam=10		// (micrometer)
		}

		/////// biophysics //////
		soma {
			cm = 1//1		    // (microF/cm2)
			Ra = 150*22.5	// (ohm-cm)
			Rm = 20000	    // (ohm-cm2)
			
			insert leakinter
			glbar_inter_leakinter = 1/Rm // (siemens/cm2)
			el_leakinter = -70	// (mV)

			insert nainter
			insert kdrinter
		drv = new IClamp(0.5)
		drv.del = 0
		drv.dur = tstop
		drv.amp = 0.0//0.2  //nA
	    	}

		dend {
			cm = 1//1		// (microF/cm2)
			Ra = 150	// (ohm-cm)
			Rm = 20000	// (ohm-cm2)
			
			insert leakinter
			glbar_inter_leakinter = 1/Rm // (siemens/cm2)
			el_leakinter = -70	// (mV)

			insert nainter
			insert kdrinter
		}
		soma {
			ena = 45		// (mV)
			gnabar_nainter = 0.035	// (siemens/cm2)

			ek = -80		// (mV)
			gkdrbar_kdrinter = 0.008 // (siemens/cm2)
			
			for i=0,199 { 
			gaps[i] = new gap(0.5) 
		    gaps[i].r = 1500//100000//100000 // Mohm resistance corresponding to 0.01 nS conductance
                    // that correspondes to 1nS for a cells of ~10000 â€˜my surface  
                    // order of magn. that was measured experimentally 
                    // ** 0.01 mS/cmy

		  
		    setpointer gaps[i].vgap,v(0.5)
			}
			n_gaps=0
			insert xtraimemrec	//x_xtra=$1*1000 y_xtra=$2*1000 z_xtra=$3*1000
		}

		dend {
			ena = 45		// (mV)
			gnabar_nainter = 0.010	// (siemens/cm2)

			ek = -80		// (mV)
			gkdrbar_kdrinter = 0.003 // (siemens/cm2)
			
			insert ca_ion
			eca = 120
			insert xtraimemrec	//x_xtra=$1*1000 y_xtra=$2*1000 z_xtra=$3*1000+150/2
		}
		forall {
		   insert extracellular
		   for (x, 0) {
		   if (ismembrane("xtraimemrec")) {
	//print x
		setpointer im_xtraimemrec(x), i_membrane(x)
		setpointer ex_xtraimemrec(x), e_extracellular(x)
		//setpointer LFPtemp_xtra(x),LFP_xtra(x)
        //r = sqrt((x_xtra(x) - $4)^2 + (y_xtra(x) - $5)^2 + (z_xtra(x) - $6)^2)
		//print x,r
//        r = sqrt((x_xtra(x) - $1)^2 + (y_xtra(x) - $2)^2 + (z_xtra(x) - $3)^2)
        // 0.01 converts rho's cm to um and ohm to megohm
        // if electrode is exactly at a node, r will be 0
        // this would be meaningless since the location would be inside the cell
        // so force r to be at least as big as local radius
        //if (r==0) r = diam(x)/2
		//rho=1/0.03//35.4
        //rx_xtra(x) = (rho / 4 / PI)*(1/r)*0.001//0.01
		
		//vrec += er_xtra(x)
		
	              }
	           }
			   
			   for (x,0){
			   		tlist.append(new Vector())
        //int_tlist.append(new Vector()) //now int_tlist is necessarily the same length as tlist
        area_vec.append(area(x)) // area_vec.x(i) is area of tlist.o(i)
		//print area(x)
        //tlist.o(tlist.count()-1).record(&i_membrane(x),1)
		tlist.o(tlist.count()-1).record(&er_xtraimemrec(x),1)
			   }
		    }
	}
	
	proc connect_gap() {
// $o1 arg is the other Cell
     n_gaps +=1
    setpointer gaps[n_gaps-1].vgap, $o1.soma.v(0.5)
}
objref all
proc append_sections() { local i
	
	all = new SectionList()
	soma all.append()
	dend all.append()
	
	
}

obfunc connect2target() { localobj nc
	soma nc = new NetCon(&v(0.5), $o1)
	nc.threshold = 0
	if (numarg() == 2) ($o2 = nc)
	return nc
	}
endtemplate InterneuronCell
